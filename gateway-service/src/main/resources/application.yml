server:
  port: 8000

eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
          - id: order-service
            uri: lb://ORDER-SERVICE
            predicates:
              - Path=/order-service/**
          - id: catalog-service
            uri: lb://CATALOG-SERVICE
            predicates:
              - Path=/catalog-service/**

          # 유저 서비스
          # 로그인 -> 인증 불필요
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/login
              - Method=POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          # 회원가입 -> 인증 불필요
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/users
              - Method=POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          # 엑츄에이터 요청
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/actuator/**
              - Method=GET,POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          # 그 외의 요청 -> 인증 필요
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/**
              - Method=GET
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter
          - id: first-service
            uri: lb://FIRST-SERVICE
            predicates:
              - Path=/first-service/**
            filters:
#              - AddRequestHeader=first-request, first-request-header2
#              - AddResponseHeader=first-response, first-response-header2
              - CustomFilter
          - id: second-service
            uri: lb://SECOND-SERVICE
            predicates:
              - Path=/second-service/**
            filters:
#              - AddRequestHeader=second-request, second-request-header2
#              - AddResponseHeader=second-response, second-response-header2
              - name: CustomFilter
              - name: LoggingFilter
                args:
                  baseMessage: Hi, there.
                  preLogger: true
                  postLogger: true

token:
  secret: user_token